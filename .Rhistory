knitr::opts_chunk$set(echo = FALSE)
library(foreign)
library(foreign)
knitr::opts_chunk$set(echo = FALSE)
library(foreign)
setwd('dados/')
files <- list.files(pattern = '\\*.DB')
setwd('dados/')
files <- list.files(pattern = '\\*.DB')
setwd('dados/')
files <- list.files(pattern = '\\*.DBF')
setwd('dados/')
files <- list.files(pattern = '.DBF')
myfiles <- lapply(files, read.dbf)
setwd('dados/')
files <- list.files(pattern = '.DBF')
myfiles <- lapply(files, read.dbf)
populacao <- do.call(rbind, myfiles)
print(files)
setwd('Data/')
files <- list.files(pattern = '.DBF')
myfiles <- lapply(files, read.dbf)
populacao <- do.call(rbind, myfiles)
print(files)
setwd('Data/')
files <- list.files(pattern = '.DBF')
myfiles <- lapply(files, read.dbf)
populacao <- do.call(rbind, myfiles)
print(files)
View(populacao)
municipios <- read.csv2('Municipios_Brasileiros.csv', header=TRUE)
regioes <- read.csv2('UF-Regiões.csv', header = TRUE)
View(regioes)
View(regioes)
View(municipios)
View(municipios)
municipios <- read.csv2('Municipios_Brasileiros.csv', header=TRUE, sep = ',')
regioes <- read.csv2('UF-Regiões.csv', header = TRUE)
View(municipios)
View(regioes)
View(municipios)
View(regioes)
str(municipios)
names(municipios)[3] <- 'CO_UF'
brasil <- merge(municipios, regioes, all.x = TRUE)
View(brasil)
library(foreign)
library(dplyr)
str(brasil)
brasil <- brasil %>%
select(Código.IBGE, Nome.do.Município, Estado, UF, NO_REGIAO, Latitude, Longitude)
str(brasil)
names(brasil)[1] <- 'code'
names(brasil)[2] <- 'city'
names(brasil)[3] <- 'state'
names(brasil)[4] <- 'abbreviation'
names(brasil)[5] <- 'region'
names(brasil)[6] <- 'lat'
names(brasil)[7] <- 'long'
View(populacao)
# Location
names(brasil)[1] <- 'code'
names(brasil)[2] <- 'city'
names(brasil)[3] <- 'state'
names(brasil)[4] <- 'abbreviation'
names(brasil)[5] <- 'region'
names(brasil)[6] <- 'lat'
names(brasil)[7] <- 'long'
# Population
names(populacao)[1] <- 'code'
names(populacao)[2] <- 'year'
names(populacao)[3] <- 'population'
str(brasil)
str(populacao)
brasil$code <- substr(as.character(brasil$code),1,6)
brasil$region <- substr(as.character(brasil$region), 1, 7)
names(municipios)[3] <- 'CO_UF'
brasil <- merge(municipios, regioes, all.x = TRUE)
brasil <- brasil %>%
select(Código.IBGE, Nome.do.Município, Estado, UF, NO_REGIAO, Latitude, Longitude)
# Location
names(brasil)[1] <- 'code'
names(brasil)[2] <- 'city'
names(brasil)[3] <- 'state'
names(brasil)[4] <- 'abbreviation'
names(brasil)[5] <- 'region'
names(brasil)[6] <- 'lat'
names(brasil)[7] <- 'long'
# Population
names(populacao)[1] <- 'code'
names(populacao)[2] <- 'year'
names(populacao)[3] <- 'population'
brasil$code <- substr(as.character(brasil$code),1,6)
substr(as.character(brasil$region), 8)
substr(as.character(brasil$region), 8, -1)
substr(as.character(brasil$region), 8, 99)
brasil$region <- substr(as.character(brasil$region), 8, 20)
brasil <- droplevels(brasil)
resultado <- merge(brasil, populacao, all.x = TRUE)
View(resultado)
resultado_horizontal <- spread(resultado, year, population)
library(tidyr)
resultado_horizontal <- spread(resultado, year, population)
View(resultado_horizontal)
write.csv2(resultado, "brazil-population-2012-2017.csv", row.names = FALSE)
write.csv2(resultado_horizontal, "brazil-population-2012-2017-spread.csv", row.names = FALSE)
getwd()
knitr::opts_chunk$set(echo = FALSE)
getwd()
sinasc <- read.dbc('PNAC1202.dbc')
require(read.dbc)
sinasc <- read.dbc('PNAC1202.dbc')
View(sinasc)
require(read.dbc)
sinasc <- read.dbc('PNAC1205.dbc')
View(populacao)
View(municipios)
knitr::opts_chunk$set(echo = FALSE)
summary(municipios)
summery(regioes)
summary(regioes)
names(regioes)[3] <- 'UF'
summary(regioes)
names(regioes)[3] <- 'Estado'
summary(regioes)
names(regioes)[2] <- 'UF'
summary(regioes)
names(municipios)[3] <- 'CO_UF'
brasil <- merge(municipios, regioes, by = 'UF', all.x = TRUE)
View(brasil)
summary(brasil)
brasil <- brasil %>%
select(Código.IBGE, Nome.do.Município, Estado.x, UF, NO_REGIAO, Latitude, Longitude)
library(foreign)
library(dplyr)
brasil <- brasil %>%
select(Código.IBGE, Nome.do.Município, Estado.x, UF, NO_REGIAO, Latitude, Longitude)
View(brasil)
View(populacao)
# Location
names(brasil)[1] <- 'code'
names(brasil)[2] <- 'city'
names(brasil)[3] <- 'state'
names(brasil)[4] <- 'abbreviation'
names(brasil)[5] <- 'region'
names(brasil)[6] <- 'lat'
names(brasil)[7] <- 'long'
# Population
names(populacao)[1] <- 'code'
names(populacao)[2] <- 'year'
names(populacao)[3] <- 'population'
brasil$code <- substr(as.character(brasil$code),1,6)
View(brasil)
summary(brasil)
brasil$region <- substr(as.character(brasil$region), 8, 20)
summary(brasil)
resultado <- merge(brasil, populacao, by = 'code', all.x = TRUE)
summary(brasil)
summary(resultado)
write.csv2(resultado, "brazil-population-2012-2017.csv", row.names = FALSE)
# write.csv2(resultado_horizontal, "brazil-population-2012-2017-spread.csv", row.names = FALSE)
View(resultado)
setwd('./Data')
files <- list.files(pattern = '.DBF')
myfiles <- lapply(files, read.dbf)
populacao <- do.call(rbind, myfiles)
View(populacao)
# Location
names(brasil)[1] <- 'code'
names(brasil)[2] <- 'city'
names(brasil)[3] <- 'state'
names(brasil)[4] <- 'abbreviation'
names(brasil)[5] <- 'region'
names(brasil)[6] <- 'lat'
names(brasil)[7] <- 'long'
# Population
names(populacao)[1] <- 'code'
names(populacao)[2] <- 'year'
names(populacao)[3] <- 'population'
brasil$code <- substr(as.character(brasil$code),1,6)
resultado <- merge(brasil, populacao, by = 'code', all.x = TRUE)
write.csv2(resultado, "brazil-population-2012-2017.csv", row.names = FALSE)
# write.csv2(resultado_horizontal, "brazil-population-2012-2017-spread.csv", row.names = FALSE)
View(populacao)
brasil$code <- substr(as.character(brasil$code),1,6)
summary(populacao)
brasil$code <- substr(as.character(brasil$code),1,6)
populacao$code <- substr(as.character(populacao$code),1,6)
resultado <- merge(brasil, populacao, by = 'code', all.x = TRUE)
summary(resultado)
write.csv2(resultado, "brazil-population-2012-2017.csv", row.names = FALSE)
# write.csv2(resultado_horizontal, "brazil-population-2012-2017-spread.csv", row.names = FALSE)
View(resultado)
